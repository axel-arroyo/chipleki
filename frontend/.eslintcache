[{"/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/index.js":"1","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/redux/store.js":"2","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/reportWebVitals.js":"3","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/App.js":"4","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/redux/reducers/authReducer.js":"5","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/redux/reducers/requirementReducer.js":"6","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/redux/reducers/projectReducer.js":"7","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/redux/reducers/userReducer.js":"8","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/redux/reducers/commentReducer.js":"9","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/Home.js":"10","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/CreateProject.js":"11","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/Login.js":"12","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/Projects.js":"13","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/Register.js":"14","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/ProjectView.js":"15","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/CreateRequirement.js":"16","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/EditRequirement.js":"17","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/DeveloperView.js":"18","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/Assign.js":"19","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/User.js":"20","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/redux/actions/authActions.js":"21","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/redux/actions/projectActions.js":"22","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/redux/actions/requirementActions.js":"23","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/redux/actions/commentActions.js":"24","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/Project.js":"25","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/Requirement.js":"26","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/Module.js":"27","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/GlobalFilter.js":"28","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/redux/actions/userActions.js":"29","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/columns.js":"30","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/CommentSection.js":"31","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/Comments.js":"32"},{"size":722,"mtime":1610080321672,"results":"33","hashOfConfig":"34"},{"size":594,"mtime":1609882373002,"results":"35","hashOfConfig":"34"},{"size":364,"mtime":1610080326347,"results":"36","hashOfConfig":"34"},{"size":9247,"mtime":1610143994851,"results":"37","hashOfConfig":"34"},{"size":452,"mtime":1609882372964,"results":"38","hashOfConfig":"34"},{"size":1666,"mtime":1609883914876,"results":"39","hashOfConfig":"34"},{"size":680,"mtime":1609882372977,"results":"40","hashOfConfig":"34"},{"size":348,"mtime":1609882372995,"results":"41","hashOfConfig":"34"},{"size":538,"mtime":1609882372970,"results":"42","hashOfConfig":"34"},{"size":735,"mtime":1610080320218,"results":"43","hashOfConfig":"34"},{"size":5994,"mtime":1610141058111,"results":"44","hashOfConfig":"34"},{"size":2080,"mtime":1610080322164,"results":"45","hashOfConfig":"34"},{"size":2119,"mtime":1610080324508,"results":"46","hashOfConfig":"34"},{"size":3449,"mtime":1610080325709,"results":"47","hashOfConfig":"34"},{"size":2178,"mtime":1610080325161,"results":"48","hashOfConfig":"34"},{"size":4172,"mtime":1610141004398,"results":"49","hashOfConfig":"34"},{"size":4934,"mtime":1610144012806,"results":"50","hashOfConfig":"34"},{"size":1085,"mtime":1610079973235,"results":"51","hashOfConfig":"34"},{"size":2477,"mtime":1610140837065,"results":"52","hashOfConfig":"34"},{"size":305,"mtime":1609882372863,"results":"53","hashOfConfig":"34"},{"size":336,"mtime":1609882372931,"results":"54","hashOfConfig":"34"},{"size":561,"mtime":1609882372945,"results":"55","hashOfConfig":"34"},{"size":1049,"mtime":1609883919864,"results":"56","hashOfConfig":"34"},{"size":382,"mtime":1609882372938,"results":"57","hashOfConfig":"34"},{"size":1039,"mtime":1610080323312,"results":"58","hashOfConfig":"34"},{"size":4111,"mtime":1610080327285,"results":"59","hashOfConfig":"34"},{"size":3436,"mtime":1610080324005,"results":"60","hashOfConfig":"34"},{"size":254,"mtime":1610080319531,"results":"61","hashOfConfig":"34"},{"size":165,"mtime":1609882372957,"results":"62","hashOfConfig":"34"},{"size":1456,"mtime":1610140854996,"results":"63","hashOfConfig":"34"},{"size":2915,"mtime":1610140837510,"results":"64","hashOfConfig":"34"},{"size":4390,"mtime":1610080290388,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"m55raj",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/index.js",[],["138","139"],"/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/redux/store.js",[],"/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/reportWebVitals.js",[],"/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/App.js",[],"/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/redux/reducers/authReducer.js",[],"/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/redux/reducers/requirementReducer.js",[],"/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/redux/reducers/projectReducer.js",[],"/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/redux/reducers/userReducer.js",[],"/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/redux/reducers/commentReducer.js",[],"/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/Home.js",[],"/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/CreateProject.js",["140"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport User from \"./User\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { fetchUsers } from \"./redux/actions/userActions\";\r\n\r\nfunction CreateProject(props) {\r\n  const user = User();\r\n  const accountType = user ? user.type : undefined;\r\n  const hasPermission =\r\n    accountType === \"Manager\" || accountType === \"Analyst\" ? true : false;\r\n  const [deliver, setDeliver] = useState(\"\");\r\n  const [client, setClient] = useState(\"\");\r\n  const [analyst, setAnalyst] = useState(\"\");\r\n  const [manager, setManager] = useState(\"\");\r\n  const [estado, setEstado] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:8080/auth/\", {\r\n        headers: {\r\n          \"auth-token\": localStorage.getItem(\"token\"),\r\n        },\r\n      })\r\n      .then((data) => {\r\n        dispatch(fetchUsers(data.data));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const users = useSelector((store) => store.userReducer.users);\r\n\r\n  const handleDeliver = (e) => {\r\n    setDeliver(e.target.value);\r\n  };\r\n\r\n  const handleClient = (e) => {\r\n    setClient(e.target.value);\r\n  };\r\n\r\n  const handleAnalyst = (e) => {\r\n    setAnalyst(e.target.value);\r\n  };\r\n\r\n  const handleManager = (e) => {\r\n    setManager(e.target.value);\r\n  };\r\n\r\n  const handleBack = (e) => {\r\n    history.push(\"/projects/\");\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    } else {\r\n      e.preventDefault();\r\n      axios\r\n        .post(\r\n          \"http://localhost:8080/project\",\r\n          {\r\n            deliver_date: deliver,\r\n            client_email: client,\r\n            analyst_email: analyst,\r\n            manager_email: manager,\r\n          },\r\n          {\r\n            headers: {\r\n              \"auth-token\": localStorage.getItem(\"token\"),\r\n            },\r\n          }\r\n        )\r\n        .then((data) => {\r\n          setEstado(\"Proyecto creado\");\r\n          history.push(\"/projects\");\r\n        })\r\n        .catch((error) => {\r\n          setEstado(\"Error creando el proyecto\");\r\n        });\r\n    }\r\n  };\r\n\r\n  return hasPermission ? (\r\n    <form id=\"msform\" onSubmit={handleSubmit}>\r\n      {estado !== \"\" && (\r\n        <Alert variant={estado === \"Proyecto creado\" ? \"success\" : \"danger\"}>\r\n          {estado}\r\n        </Alert>\r\n      )}\r\n      <ul id=\"progressbar\">\r\n        <li>Login</li>\r\n        <li class=\"active\">Proyectos</li>\r\n        <li>Requerimientos</li>\r\n      </ul>\r\n      <fieldset>\r\n        <h2 class=\"fs-title\">Creación de proyectos</h2>\r\n        <h3 class=\"fs-subtitle\">Asegúrese de rellenar los campos</h3>\r\n        <input\r\n          type=\"date\"\r\n          name=\"date\"\r\n          onChange={handleDeliver}\r\n          placeholder=\"Enter estimated deliver date\"\r\n          required\r\n        ></input>\r\n        <div class=\"form-group\" float=\"center\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"manager_sb\"\r\n            onChange={handleManager}\r\n            placeholder=\"Select Manager\"\r\n            list=\"managers\"\r\n            required\r\n            as=\"select\"\r\n          ></input>\r\n          <datalist id=\"managers\">\r\n            <select name=\"managers\">\r\n              <option value=\"\"></option>\r\n              {users ? (\r\n                users\r\n                  .filter((u) => u.type === \"Manager\")\r\n                  .map((u) => (\r\n                    <option key={u.email} value={u.email}>\r\n                      {u.email}\r\n                    </option>\r\n                  ))\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </select>\r\n          </datalist>\r\n        </div>\r\n        <div class=\"form-group\" float=\"center\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"analyst_sb\"\r\n            onChange={handleAnalyst}\r\n            placeholder=\"Select Analyst\"\r\n            list=\"analysts\"\r\n            required\r\n            as=\"select\"\r\n          ></input>\r\n          <datalist id=\"analysts\">\r\n            <select name=\"analysts\">\r\n              <option value=\"\"></option>\r\n              {users ? (\r\n                users\r\n                  .filter((u) => u.type === \"Analyst\")\r\n                  .map((u) => (\r\n                    <option key={u.email} value={u.email}>\r\n                      {u.email}\r\n                    </option>\r\n                  ))\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </select>\r\n          </datalist>\r\n        </div>\r\n        <div class=\"form-group\" float=\"center\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"client_sb\"\r\n            onChange={handleClient}\r\n            placeholder=\"Select Client\"\r\n            list=\"clients\"\r\n            required\r\n            as=\"select\"\r\n          ></input>\r\n          <datalist id=\"clients\">\r\n            <select name=\"clients\">\r\n              <option value=\"\"></option>\r\n              {users ? (\r\n                users\r\n                  .filter((u) => u.type === \"Client\")\r\n                  .map((u) => (\r\n                    <option key={u.email} value={u.email}>\r\n                      {u.email}\r\n                    </option>\r\n                  ))\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </select>\r\n          </datalist>\r\n        </div>\r\n        <button class=\"next action-button\" onclick=\"thanks()\">\r\n          Submit\r\n        </button>\r\n        <button\r\n          onClick={handleBack}\r\n          type=\"back\"\r\n          className=\"next action-button-2\"\r\n        >\r\n          Cancelar\r\n        </button>\r\n      </fieldset>\r\n    </form>\r\n  ) : (\r\n    <Alert variant=\"danger\">Acceso Restringido</Alert>\r\n  );\r\n}\r\n\r\nexport default CreateProject;\r\n","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/Login.js",[],"/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/Projects.js",["141"],"import React, { useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport axios from \"axios\";\r\nimport Project from \"./Project.js\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Col, Row, Container, Alert } from \"react-bootstrap\";\r\nimport { fetchProjects } from \"./redux/actions/projectActions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport User from \"./User\";\r\n\r\nfunction Projects(props) {\r\n  const isLogged = useSelector((store) => store.authReducer.isLogged);\r\n  const user = User();\r\n  const accountType = user ? user.type : undefined;\r\n\r\n  const canCreate =\r\n    accountType === \"Manager\" || accountType === \"Analyst\" ? true : false;\r\n  const projects = useSelector((store) => store.projectReducer.projects);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (isLogged) {\r\n      axios\r\n        .get(\"http://localhost:8080/project\", {\r\n          headers: {\r\n            \"auth-token\": localStorage.getItem(\"token\"),\r\n          },\r\n        })\r\n        .then((data) => {\r\n          dispatch(fetchProjects(data.data));\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  return isLogged ? (\r\n    <Container fluid>\r\n      {canCreate ? (\r\n        <Link to=\"/newProject\">\r\n          <button class=\"icon-btn add-btn\">\r\n            <div class=\"add-icon\"></div>\r\n            <div class=\"btn-txt\">Agregar proyecto</div>\r\n          </button>\r\n        </Link>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <Row>\r\n        {projects !== undefined ? (\r\n          projects\r\n            .filter(\r\n              (p) =>\r\n                p.manager_email === user.email ||\r\n                p.analyst_email === user.email ||\r\n                p.client_email === user.email\r\n            )\r\n            .map((v) => (\r\n              <Col key={v.id} md={3}>\r\n                <Project id={v.id} flag={canCreate} />\r\n              </Col>\r\n            ))\r\n        ) : (\r\n          <Col></Col>\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  ) : (\r\n    <Alert variant=\"danger\">Necesitas permisos para acceder.</Alert>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/Register.js",[],"/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/ProjectView.js",["142"],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Col, Row, Container, Alert } from \"react-bootstrap\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { fetchRequirements } from \"./redux/actions/requirementActions\";\r\nimport Requirement from \"./Requirement.js\";\r\nimport User from \"./User\";\r\nimport CommentSection from \"./CommentSection\";\r\n\r\nfunction ProjectView(props) {\r\n  const user = User();\r\n  const accountType = user ? user.type : undefined;\r\n  const canCreate =\r\n    accountType === \"Manager\" || accountType === \"Analyst\" ? true : false;\r\n  const isLogged = useSelector((store) => store.authReducer.isLogged);\r\n  const { thisId } = useParams();\r\n  const dispatch = useDispatch();\r\n  const requirements = useSelector(\r\n    (store) => store.requirementReducer.requirements\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isLogged) {\r\n      axios\r\n        .get(\"http://localhost:8080/requirement\", {\r\n          headers: {\r\n            \"auth-token\": localStorage.getItem(\"token\"),\r\n          },\r\n        })\r\n        .then((response) => {\r\n          dispatch(fetchRequirements(response.data));\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  return isLogged ? (\r\n    <Container fluid>\r\n      {canCreate ? (\r\n        <Link to={\"/projects/\" + thisId + \"/newRequirement\"}>\r\n          <button class=\"icon-btn add-btn\">\r\n            <div class=\"add-icon\"></div>\r\n            <div class=\"btn-txt\">Agregar requerimiento</div>\r\n          </button>\r\n        </Link>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <Row>\r\n        {requirements ? (\r\n          requirements\r\n            .filter((r) => r.id_project === parseInt(thisId))\r\n            .map((v) => (\r\n              <Col key={v.id} md={3}>\r\n                <Requirement id={v.id} flag={canCreate} />\r\n              </Col>\r\n            ))\r\n        ) : (\r\n          <Col></Col>\r\n        )}\r\n      </Row>\r\n      <CommentSection project={thisId} />\r\n    </Container>\r\n  ) : (\r\n    <Alert variant=\"danger\">Necesitas permisos para acceder.</Alert>\r\n  );\r\n}\r\n\r\nexport default ProjectView;\r\n","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/CreateRequirement.js",[],"/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/EditRequirement.js",[],"/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/DeveloperView.js",["143"],"import { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport Module from \"./Module.js\";\r\nimport { fetchRequirements } from \"./redux/actions/requirementActions.js\";\r\n\r\nfunction DeveloperView(props) {\r\n  const dispatch = useDispatch();\r\n  const requirements = useSelector(\r\n    (store) => store.requirementReducer.requirements\r\n  );\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:8080/requirement\", {\r\n        headers: {\r\n          \"auth-token\": localStorage.getItem(\"token\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        dispatch(fetchRequirements(response.data));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  },[]);\r\n\r\n  return (\r\n    <Row>\r\n      {requirements\r\n        .filter((r) => r.id_developer === null)\r\n        .map((req) => (\r\n          <Col key={req.id} md={3}>\r\n            <Module id={req.id} flag={false} />\r\n          </Col>\r\n        ))}\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default DeveloperView;\r\n","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/Assign.js",["144"],"import { useParams } from \"react-router-dom\";\r\nimport React, { useMemo, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useTable, useSortBy, useGlobalFilter } from \"react-table\";\r\nimport { GlobalFilter } from \"./GlobalFilter.js\";\r\nimport \"./table.css\";\r\n\r\nimport { COLUMNS } from \"./columns\";\r\n\r\nfunction Assign(props) {\r\n  const { Requirement } = useParams();\r\n  const [developers, setDevelopers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\r\n        \"http://localhost:8080/developer/data\",\r\n        {\r\n          id_requirement: parseInt(Requirement),\r\n        },\r\n        {\r\n          headers: {\r\n            \"auth-token\": localStorage.getItem(\"token\"),\r\n          },\r\n        }\r\n      )\r\n      .then((data) => {\r\n        setDevelopers(data.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const columns = useMemo(() => COLUMNS, []);\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    state,\r\n    setGlobalFilter,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data: developers,\r\n    },\r\n    useGlobalFilter,\r\n    useSortBy\r\n  );\r\n\r\n  const { globalFilter } = state;\r\n\r\n  return (\r\n    <div>\r\n      <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                  {column.render(\"Header\")}\r\n                  <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? \" 🔽\"\r\n                        : \" 🔼\"\r\n                      : \"\"}\r\n                  </span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Assign;\r\n","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/User.js",[],"/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/redux/actions/authActions.js",[],"/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/redux/actions/projectActions.js",[],"/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/redux/actions/requirementActions.js",[],"/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/redux/actions/commentActions.js",[],"/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/Project.js",[],"/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/Requirement.js",[],"/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/Module.js",["145"],"import React, { useEffect, useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport User from \"./User.js\";\r\nimport { hideRequirement } from \"./redux/actions/requirementActions.js\";\r\n\r\nfunction Module(props) {\r\n  const {\r\n    id,\r\n    name,\r\n    description,\r\n    estimated_time,\r\n    deadline,\r\n    priority,\r\n  } = useSelector((s) =>\r\n    s.requirementReducer.requirements.find((r) => r.id === props.id)\r\n  );\r\n\r\n  const [quotations, setQuotations] = useState([]);\r\n  const user = User();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\r\n        \"http://localhost:8080/developer/devquotations\",\r\n        { email: user.email },\r\n        {\r\n          headers: {\r\n            \"auth-token\": localStorage.getItem(\"token\"),\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setQuotations(response.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const quoted = quotations.map((q) => q.id_requirement);\r\n\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [value, setValue] = useState(0);\r\n  const [validated, setValidated] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleForm = () => {\r\n    setShowForm(!showForm);\r\n  };\r\n\r\n  const handleValue = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handleSumbit = (e) => {\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    } else {\r\n      e.preventDefault();\r\n      axios\r\n        .post(\r\n          \"http://localhost:8080/developer/quotation\",\r\n          {\r\n            value: value,\r\n            id_requirement: props.id,\r\n            email: user.email,\r\n          },\r\n          {\r\n            headers: {\r\n              \"auth-token\": localStorage.getItem(\"token\"),\r\n            },\r\n          }\r\n        )\r\n        .then((data) => {\r\n          dispatch(hideRequirement(props.id));\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n    setValidated(true);\r\n  };\r\n\r\n  if (quoted.includes(props.id)) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <div class=\"card-container-module\">\r\n      <img\r\n        class=\"round\"\r\n        src={\"https://avatars.dicebear.com/api/jdenticon/\" + id + \".svg\"}\r\n        alt=\"user\"\r\n      />\r\n      <h3>\r\n        <b>{name}</b>\r\n      </h3>\r\n      <p>{\"Descripción  \" + description}</p>\r\n      <p>{\"Prioridad:  \" + priority}</p>\r\n      <p>{\"Tiempo estimado:  \" + estimated_time}</p>\r\n      <p>{\"Fecha límite:  \" + moment(deadline).format(\"DD/MM/YY\")}</p>\r\n      {showForm && (\r\n        <div>\r\n          <Form noValidate validated={validated} onSubmit={handleSumbit}>\r\n            <div class=\"formulario\">\r\n              <Form.Control onChange={handleValue} type=\"number\" required />\r\n            </div>\r\n            <button type=\"submit\" class=\"primary-module\" placeholder=\"valor\">\r\n              Enviar\r\n            </button>\r\n            <button onClick={handleForm} class=\"danger-module\">\r\n              Cancelar\r\n            </button>\r\n          </Form>\r\n        </div>\r\n      )}\r\n      {showForm ? (\r\n        <></>\r\n      ) : (\r\n        <button onClick={handleForm} class=\"primary\">\r\n          Enviar cotización\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Module;\r\n","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/GlobalFilter.js",[],"/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/redux/actions/userActions.js",[],"/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/columns.js",[],"/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/CommentSection.js",["146"],"import React, { useState, useEffect } from \"react\";\nimport { Row } from \"react-bootstrap\";\nimport { Comment } from \"semantic-ui-react\";\nimport Comments from \"./Comments.js\";\nimport User from \"./User.js\";\nimport axios from \"axios\";\n\nfunction CommentSection(props) {\n  const tx = document.getElementsByTagName(\"textarea\");\n  for (let i = 0; i < tx.length; i++) {\n    tx[i].setAttribute(\n      \"style\",\n      \"height:\" + tx[i].scrollHeight + \"px;overflow-y:hidden;\"\n    );\n    tx[i].addEventListener(\"input\", OnInput, false);\n  }\n\n  function OnInput() {\n    this.style.height = \"auto\";\n    this.style.height = this.scrollHeight + \"px\";\n  }\n  const user = User();\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState(\"\");\n  const [validated, setValidated] = useState(false);\n\n  const handleComment = (e) => {\n    setComment(e.target.value);\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8080/comment\", {\n        headers: {\n          \"auth-token\": localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        setComments(response.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const handleSubmit = (e) => {\n    const form = e.currentTarget;\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    } else {\n      axios\n        .post(\n          \"http://localhost:8080/comment\",\n          {\n            comment: comment,\n            creator: user.email,\n            project: parseInt(props.project),\n          },\n          {\n            headers: {\n              \"auth-token\": localStorage.getItem(\"token\"),\n            },\n          }\n        )\n        .then((response) => {\n          console.log(response.data);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n    setValidated(true);\n  };\n\n  return (\n    <div class=\"ui comments\">\n      <h3 class=\"ui dividing header\">Comentarios</h3>\n      <div class=\"submitType\">\n        <span class=\"write-new\">\n          <form onSubmit={handleSubmit}>\n            <textarea\n              type=\"text\"\n              placeholder=\"Unirse a la conversación\"\n              name=\"comment\"\n              required\n              onChange={handleComment}\n            ></textarea>\n\n            <button type=\"submit\">Submit</button>\n          </form>\n        </span>\n        <div>\n          <br></br>\n          <Row>\n            <Comment.Group>\n              {comments\n                .filter((c) => c.project === parseInt(props.project))\n                .reverse()\n                .map((c) => (\n                  <Comments\n                    comment={c}\n                    reply={comments.filter((v) => v.replyOf === c.id)}\n                  />\n                ))}\n            </Comment.Group>\n          </Row>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CommentSection;\n","/mnt/c/Users/axela/Desktop/2020 - 2/INF236 - Analisis y Diseño de Software/chipleki/frontend/src/Comments.js",[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":36,"column":6,"nodeType":"153","endLine":36,"endColumn":8,"suggestions":"154"},{"ruleId":"151","severity":1,"message":"155","line":36,"column":6,"nodeType":"153","endLine":36,"endColumn":8,"suggestions":"156"},{"ruleId":"151","severity":1,"message":"155","line":38,"column":6,"nodeType":"153","endLine":38,"endColumn":8,"suggestions":"157"},{"ruleId":"151","severity":1,"message":"152","line":28,"column":5,"nodeType":"153","endLine":28,"endColumn":7,"suggestions":"158"},{"ruleId":"151","severity":1,"message":"159","line":33,"column":6,"nodeType":"153","endLine":33,"endColumn":8,"suggestions":"160"},{"ruleId":"151","severity":1,"message":"161","line":41,"column":6,"nodeType":"153","endLine":41,"endColumn":8,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":25,"column":10,"nodeType":"165","messageId":"166","endLine":25,"endColumn":19},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["169"],"React Hook useEffect has missing dependencies: 'dispatch' and 'isLogged'. Either include them or remove the dependency array.",["170"],["171"],["172"],"React Hook useEffect has a missing dependency: 'Requirement'. Either include it or remove the dependency array.",["173"],"React Hook useEffect has a missing dependency: 'user.email'. Either include it or remove the dependency array.",["174"],"no-unused-vars","'validated' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"177","fix":"179"},{"desc":"175","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},"Update the dependencies array to be: [dispatch]",{"range":"185","text":"186"},"Update the dependencies array to be: [dispatch, isLogged]",{"range":"187","text":"188"},{"range":"189","text":"188"},{"range":"190","text":"186"},"Update the dependencies array to be: [Requirement]",{"range":"191","text":"192"},"Update the dependencies array to be: [user.email]",{"range":"193","text":"194"},[1151,1153],"[dispatch]",[1154,1156],"[dispatch, isLogged]",[1279,1281],[788,790],[874,876],"[Requirement]",[1032,1034],"[user.email]"]